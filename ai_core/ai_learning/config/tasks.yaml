# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
#                                                                                            Learning Plan Task
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
end2end_task:
  description: |-
    # User Input
    - Self-assessment: {self_assessment}
    - User goals: {user_goals}
    - Period: {period}
    - Weekly study hours: {weekly_study_hours}

    # Guidelines
    1. Analyze user input and structure goals using SMART criteria.
    2. Assess feasibility and prioritize goals.
    3. Design a personalized curriculum and sequence topics for optimal learning.
    4. Create a realistic timeline and optimized weekly schedule.
    5. Integrate all components into a comprehensive learning plan.
    6. Output the final plan as a single, well-formed XML document, strictly following the schema and rules below.
    7. **IMPORTANT:** 
      - All XML tag names and attributes MUST remain in English as defined below. 
      - However, the content inside the tags (such as titles, overviews, activities, strategies, resources, objectives, plans, and tips) MUST be written in the {language} language. 
      - Do NOT translate or modify any tag names or attribute names.

    # [XML STRUCTURE DEFINITION]

    - <study_plan>: (Root element) Contains the entire study plan.
      + <title>: (Required, 1) The overall title of the study plan.
      + <overview>: (Required, 1) A general overview of the study plan, describing goals, duration, target audience, etc.
      + <weekly_plan>: (Required, 1) Contains the weekly study schedule.
        + <day name="[DayOfWeek]" time="[Duration]">: (Required, multiple allowed) Defines the plan for each day. Must include name and time attributes.
          + <focus>: (Required, 1) The core learning objective for that day.
          + <activity>: (Required, 1) Contains specific learning activities.
            + <item>: (Required, 1 or more) Describes each individual activity.
      + <learning_strategies>: (Required, 1) Describes specific learning strategies by skill area.
        + <listening>, <reading>, <writing>, <speaking>, <vocabulary>, <grammar>: (Required, 1 of each) Represents each learning skill area.
          + <item>: (Required, 1 or more) Describes each specific strategy for that skill.
      + <recommended_resources>: (Required, 1) A list of recommended learning materials.
        + <textbooks>, <online_resources>, <apps>, <practice_tests>: (Required, 1 of each) Categorizes the types of resources.
          + <item>: (Required, 1 or more) Describes each individual resource.
      + <timeline>: (Required, 1) Presents milestones and goals over a period.
        + <phase name="[Period]">: (Required, multiple allowed) Divides the study plan into phases, like 'Months 1-2'. Must include the name attribute.
          + <objective>: (Required, 1) The objective for that phase.
          + <plan>: (Required, 1) The detailed plan for that phase.
            + <item>: (Required, 1 or more) Describes each individual plan item.
      + <tips>: (Required, 1) Contains additional advice for successful learning.
        + <item>: (Required, 1 or more) Describes each individual tip.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <study_plan>
      <title>...</title>
      <overview>...</overview>
      <weekly_plan>
        <day name="..." time="...">
          <focus>...</focus>
          <activity>
            <item>...</item>
            ...
          </activity>
        </day>
        ...
      </weekly_plan>
      <learning_strategies>
        <listening>
          <item>...</item>
          ...
        </listening>
        <reading>
          <item>...</item>
          ...
        </reading>
        <writing>
          <item>...</item>
          ...
        </writing>
        <speaking>
          <item>...</item>
          ...
        </speaking>
        <vocabulary>
          <item>...</item>
          ...
        </vocabulary>
        <grammar>
          <item>...</item>
          ...
        </grammar>
      </learning_strategies>
      <recommended_resources>
        <textbooks>
          <item>...</item>
          ...
        </textbooks>
        <online_resources>
          <item>...</item>
          ...
        </online_resources>
        <apps>
          <item>...</item>
          ...
        </apps>
        <practice_tests>
          <item>...</item>
          ...
        </practice_tests>
      </recommended_resources>
      <timeline>
        <phase name="...">
          <objective>...</objective>
          <plan>
            <item>...</item>
            ...
          </plan>
        </phase>
        ...
      </timeline>
      <tips>
        <item>...</item>
        ...
      </tips>
    </study_plan>
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.
    Ensure the XML is well-formed, with no extra text or comments. Validate against the provided schema.


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                                                                                            Vocabulary Expansion Task
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
vocab_expansion_task:
  description: |-
    # User Input
    - Korean word: {user_word}
    - User's language: {language}

    # Guidelines
    1. Analyze the input word, correcting typos if necessary.
    2. Classify the word's level (Beginner, Intermediate, Advanced) per TOPIK.
    3. Detect user's language (default: Korean; otherwise, use context).
    4. Output a detailed vocabulary analysis as a single, well-formed XML document, strictly following the schema and rules below.
    5. If the input is invalid, out of scope, or inappropriate, return only the specified plain text error message.

    # [XML STRUCTURE DEFINITION]

    - <vocabulary_expansion>: (Root element) Contains the entire analysis.
      + <request original_input="[user's raw input]">: (Required, 1) Information about the initial user request.
        + <corrected_input>: (Optional, 1) The word after typo correction. Only include if a correction was made.
      + <word_info level="[Beginner/Intermediate/Advanced]" type="[품사]">: (Required, 1) Contains all information about the word. level and type attributes are mandatory.
        + <word>: (Required, 1) The standard form of the word.
        + <pronunciation>: (Optional, 1) Phonetic pronunciation.
        + <definition lang="ko">: (Required, 1) The primary definition in Korean.
        + <definition lang="[user_lang]">: (Optional, 1) The definition translated into the user's native language. (language: {language})
        + <synonyms>: (Optional, 1) A list of synonyms.
          + <item>: (Required if <synonyms> exists, multiple allowed) A single synonym.
        + <antonyms>: (Optional, 1) A list of antonyms.
          + <item>: (Required if <antonyms> exists, multiple allowed) A single antonym.
        + <examples>: (Required, 1) A list of example sentences.
          + <example>: (Required, multiple allowed) A single example set.
            + <ko>: (Required, 1) The example sentence in Korean.
            + <translation lang="[user_lang]">: (Optional, 1) The translation of the example sentence. (language: {language})
        + <etymology>: (Optional, 1) Etymology or Hanja origin of the word.
        + <related_expressions>: (Optional, 1) A list of related idioms or expressions.
          + <item>: (Required if tag exists, multiple allowed) A single related expression.

    # [ERROR MESSAGES]
    1. Invalid Input: 입력하신 단어나 표현을 이해하지 못했습니다. 다시 한 번 확인해 주세요.
    2. Out of Scope: 죄송합니다. 저는 한국어 어휘 학습을 돕는 AI입니다. 일반적인 질문은 기본 챗봇을 이용해 주세요.
    3. Inappropriate Content: 부적절한 내용이 감지되어 응답할 수 없습니다.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <vocabulary_expansion>
      <request original_input="...">
        <corrected_input>...</corrected_input>
      </request>
      <word_info level="..." type="...">
        <word>...</word>
        <pronunciation>...</pronunciation>
        <definition lang="ko">...</definition>
        <definition lang="en">...</definition>
        <synonyms>
          <item>...</item>
          ...
        </synonyms>
        <antonyms>
          <item>...</item>
          ...
        </antonyms>
        <examples>
          <example>
            <ko>...</ko>
            <translation lang="en">...</translation>
          </example>
          ...
        </examples>
        <etymology>...</etymology>
        <related_expressions>
          <item>...</item>
          ...
        </related_expressions>
      </word_info>
    </vocabulary_expansion>
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.
    If the input is invalid, out of scope, or inappropriate, return only the specified plain text error message.
    Ensure the XML is well-formed, with no extra text or comments. Validate against the provided schema.


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#                                                                                            TOPIK Generation Task
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
topik_preprocessing_task:
  description: |-
    # User Input
    - Level: {level}
    - Type: {type}
    - Subtype: {subtype}
    - Topic: {topic}

    # Guidelines
    1. Validate and normalize the user input for TOPIK question generation.
    2. Ensure the level, type, and topic are well-formed, standardized, and appropriate for TOPIK.
    3. The 'topic' field must be a detailed, well-formed description in Korean, elaborating on the topic's context, scope, or relevant aspects (not just a label).
    4. If any field is missing or ambiguous, infer or suggest a suitable value based on context, always using the official TOPIK terminology in English.
    5. Output a single, well-formed JSON object with the following fields: level, type, topic, topic_details, subtype. All values must be in English and standardized.
    6. Do not generate any explanations or text outside the JSON.

  expected_output: |-
    Concise information about the TOPIK question request, formatted as a single, well-formed JSON object:
    {
      "level": "...",
      "type": "...",
      "topic": "...",
      "topic_details": "...",
      "subtype": "..."
    }
    Ensure all values are in Korean and standardized according to official TOPIK terminology.
    The 'topic' value must be a detailed, context-rich description in Korean.
    Do not include any explanations or text outside the JSON.


topik_question_task:
  description: |-
    # User Input will be preprocessed by the topik_preprocessing_task to ensure it is well-formed and standardized.

    # Guidelines
    1. Analyze the user's request and create a unique, high-quality TOPIK question based on the specified level, type, subtype, and topic.
    2. Strictly follow the principles of validity, authenticity, clarity, and plausible distractors.
    3. Ensure the question is unique for each request, even for repeated topics.
    4. Output only a single, well-formed XML document, strictly following the schema and rules below.

    # [CORE PRINCIPLES OF QUESTION CREATION] 
    1. Validity: The question must accurately measure the specific language skill (e.g., inference, detail comprehension, vocabulary knowledge) intended for the given level and type. 
    2. Authenticity: The passage, question, and choices must use vocabulary, grammar, and sentence structures appropriate for the specified TOPIK level (Beginner, Intermediate, Advanced). 
    3. Clarity: The question and passage must be clear and unambiguous. There should be only one definitively correct answer. 
    4. Plausible Distractors: Incorrect choices (distractors) must be attractive to learners who have an incomplete understanding. They should be based on 
    principles like using words from the passage irrelevantly, presenting opposite information, or making logical leaps. 

    # [DYNAMIC CONTENT GENERATION] 
    1. Topic-Driven Content: You will be given a specific topic along with the level, type, and subtype. The entire question, including the passage and choices, 
    MUST be created based on this topic. 
    2. Variety and Uniqueness: Even if the same topic is provided multiple times, you must create a unique question by focusing on a different aspect of the 
    topic or using a different context. Avoid generating repetitive questions. 
    3. Topic Examples: Topics can range from daily life ('반려동물', '배달 문화') to social issues ('환경 보호', '저출산 문제') or technology ('인공지능', '메타버스').

    # [XML STRUCTURE DEFINITION]

    - <topic_question>: (Root element)
      + <metadata>: (Required, 1)
        * <level>: (Required, 1) Difficulty level (초급, 중급, 고급).
        * <type>: (Required, 1) Main category (어휘, 문법, 읽기).
        * <subtype>: (Required, 1) Specific sub-type (e.g., 빈칸 채우기, 중심 생각 찾기).
        * <topic>: (Required, 1) The specific topic for the question content.
        * <skill>: (Required, 1) The specific language skill being tested.
      + <passage>: (Optional, 1) Enclose in <![CDATA[...]]>.
      + <question>: (Required, 1) Enclose in <![CDATA[...]]>.
      + <choices>: (Required, 1)
        * <choice id="[number]">: (Required, 4) Enclose in <![CDATA[...]]>.
      + <answer>: (Required, 1)
        * <id>: (Required, 1) The ID of the correct choice.
        * <explanation>:
          - <rationale>: (Required, 1) Enclose in <![CDATA[...]]>.
          - <distractor_analysis>:
            - <item choice_id="[number]">: (Required, 3) Enclose in <![CDATA[...]]>.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <topic_question>
      <metadata>
        <level>...</level>
        <type>...</type>
        <subtype>...</subtype>
        <topic>...</topic>
        <skill>...</skill>
      </metadata>
      <passage><![CDATA[...]]></passage>
      <question><![CDATA[...]]></question>
      <choices>
        <choice id="1"><![CDATA[...]]></choice>
        <choice id="2"><![CDATA[...]]></choice>
        <choice id="3"><![CDATA[...]]></choice>
        <choice id="4"><![CDATA[...]]></choice>
      </choices>
      <answer>
        <id>...</id>
        <explanation>
          <rationale><![CDATA[...]]></rationale>
          <distractor_analysis>
            <item choice_id="..."><![CDATA[...]]></item>
            <item choice_id="..."><![CDATA[...]]></item>
            <item choice_id="..."><![CDATA[...]]></item>
          </distractor_analysis>
        </explanation>
      </answer>
    </topic_question>
    
    CRITICAL: Ensure complete consistency between passage, question, choices, and explanation.
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.
    Ensure the XML is well-formed, with no extra text or comments. Validate against the provided schema.


