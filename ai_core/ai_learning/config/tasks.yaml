goal_analysis_task:
  description: |-
    # User Input
    - Self-assessment: {self_assessment}
    - User goals: {user_goals}
    - Period: {period}
    - Weekly study hours: {weekly_study_hours}

    # Guidelines
    1. Analyze each user goal using SMART criteria (Specific, Measurable, Achievable, Relevant, Time-bound).
    2. Assess the feasibility of each goal based on the user's self-assessment, available period, and weekly study hours. Clearly state if the goal is realistic or needs adjustment.
    3. Structure goals into a hierarchy: identify main goals and break them down into actionable sub-goals.
    4. Assign a priority weight (max 1.0) to each main goal, based on importance and urgency.
    5. For each goal, provide a short, specific description and a feasibility note and sub goal.
    6. If goals are unclear or unrealistic, provide feedback and suggestions for clarification or adjustment.

  expected_output: |-
    Provide a structured goal hierarchy in the concise format:

curriculum_planning_task:
  description: |-
    # User Input
    - Goals: Get concise goal hierarchy from goal analysis task

    # Guidelines
    1. Design a personalized curriculum based on assessment results and user goals.
    2. Sequence topics and skills for optimal learning progression.
    3. Map dependencies between topics and skills.
    4. Ensure the curriculum is achievable and motivating within the given constraints.

  expected_output: |-
    Provide a detailed curriculum plan in the concise format:

timeline_task:
  description: |-
    # User Input
    ## Period:
    {period}

    ## Weekly study hours:
    {weekly_study_hours} (hours/weekly)

    ## Curriculum: 
    {curriculum_plan}

    # Guidelines
    1. Carefully analyze the provided Curriculum, user constraints (period, weekly study hours), and feasibility notes.
    2. Break down the learning journey into clear, realistic phases (e.g., Foundation, Skill Integration, Exam Preparation), each with a specific time period (e.g., "Month 1-2", "Q1 2024").
    3. For each phase:
       - Name: Combine a descriptive phase name and its estimated period (e.g., "Month 1-2: Foundation Building").
       - Objective: Write a clear, actionable objective that aligns with the user's main goals and sub-goals for this phase.
       - Plan: List specific, measurable, and achievable tasks or milestones that must be completed in this phase. Each plan item should be concrete and relevant to the user's goals and available time.
    4. Ensure the timeline is logically sequenced, covers all main/sub-goals, and distributes workload realistically according to the user's available study hours and period.
    5. Make sure each phase is motivating, achievable, and avoids overloading the user.
    6. If the user's goals are very ambitious, recommend breaking them into smaller, more manageable milestones across phases.

  expected_output: |-
    Provide a structured timeline in the concise format:

schedule_optimization_task:
  description: |-
    # User Input
    ## Available time: 
    {weekly_study_hours} (hours/weekly)

    ## Curriculum: 
    {curriculum_plan}

    # Guidelines
    1. Analyze available study time (weekly).
    2. Integrate Pomodoro and spaced repetition techniques into the schedule.
    3. Balance cognitive load across sessions and days.
    4. Adjust the schedule for optimal retention and motivation.

  expected_output: |-
    Provide an optimized study schedule in the concise format:

planning_task:
  description: |-
    # User Input

    ## Curriculum plan: 
    {curriculum_plan}

    ## Timeline:
    {timeline_plan}

    ## Schedule plan: 
    {schedule_plan}

    # Guidelines
    1. Integrate all components into a comprehensive, actionable learning plan.
    2. Ensure the plan includes the following sections, each clearly structured:
       - title: The overall title of the study plan.
       - overview: General description of the plan, goals, duration, and target audience.
       - weekly_plan: A list of days, each with name, time, focus, and activities.
       - learning_strategies: For each skill area (listening, reading, writing, speaking, vocabulary, grammar), provide a list of strategies.
       - recommended_resources: For each resource type (textbooks, online_resources, apps, practice_tests), provide a list of recommended items.
       - timeline: A list of phases, each with name, objective, and a list of plan items.
       - tips: A list of actionable tips for success.
    3. Each section must be output as a top-level YAML key, with all sub-items as lists or nested keys as appropriate.
    4. Ensure all content is clear, actionable, and ready for conversion to XML.

  expected_output: |-
    Provide the complete learning plan with concise structured:
    All sections must be present and clearly structured as much as details.

xml_structure_task:
  description: |-
    # User Input
    - Comprehensive plan data: get from planning task

    # Guidelines
    1. Convert the learning plan into a well-structured XML format following the defined schema.
    2. Validate the XML for consistency and completeness.
    3. Generate additional UI-friendly representations (e.g., parsed components or summaries) as needed.
    4. Ensure the output is ready for integration into user interfaces.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <study_plan>
      <title>...</title>
      <overview>...</overview>
      <weekly_plan>
        <day name="..." time="...">
          <focus>...</focus>
          <activity>
            <item>...</item>
            ...
          </activity>
        </day>
        ...
      </weekly_plan>
      <learning_strategies>
        <listening>
          <item>...</item>
          ...
        </listening>
        <reading>
          <item>...</item>
          ...
        </reading>
        <writing>
          <item>...</item>
          ...
        </writing>
        <speaking>
          <item>...</item>
          ...
        </speaking>
        <vocabulary>
          <item>...</item>
          ...
        </vocabulary>
        <grammar>
          <item>...</item>
          ...
        </grammar>
      </learning_strategies>
      <recommended_resources>
        <textbooks>
          <item>...</item>
          ...
        </textbooks>
        <online_resources>
          <item>...</item>
          ...
        </online_resources>
        <apps>
          <item>...</item>
          ...
        </apps>
        <practice_tests>
          <item>...</item>
          ...
        </practice_tests>
      </recommended_resources>
      <timeline>
        <phase name="...">
          <objective>...</objective>
          <plan>
            <item>...</item>
            ...
          </plan>
        </phase>
        ...
      </timeline>
      <tips>
        <item>...</item>
        ...
      </tips>
    </study_plan>
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
#                                                                                            End-to-End Task
end2end_task:
  description: |-
    # User Input
    - Self-assessment: {self_assessment}
    - User goals: {user_goals}
    - Period: {period}
    - Weekly study hours: {weekly_study_hours}

    # Guidelines
    1. Analyze user input and structure goals using SMART criteria.
    2. Assess feasibility and prioritize goals.
    3. Design a personalized curriculum and sequence topics for optimal learning.
    4. Create a realistic timeline and optimized weekly schedule.
    5. Integrate all components into a comprehensive learning plan.
    6. Output the final plan as a single, well-formed XML document, strictly following the schema and rules below.
    7. **IMPORTANT:** 
      - All XML tag names and attributes MUST remain in English as defined below. 
      - However, the content inside the tags (such as titles, overviews, activities, strategies, resources, objectives, plans, and tips) MUST be written in the {language} language. 
      - Do NOT translate or modify any tag names or attribute names.

    # [XML STRUCTURE DEFINITION]

    - <study_plan>: (Root element) Contains the entire study plan.
      + <title>: (Required, 1) The overall title of the study plan.
      + <overview>: (Required, 1) A general overview of the study plan, describing goals, duration, target audience, etc.
      + <weekly_plan>: (Required, 1) Contains the weekly study schedule.
        + <day name="[DayOfWeek]" time="[Duration]">: (Required, multiple allowed) Defines the plan for each day. Must include name and time attributes.
          + <focus>: (Required, 1) The core learning objective for that day.
          + <activity>: (Required, 1) Contains specific learning activities.
            + <item>: (Required, 1 or more) Describes each individual activity.
      + <learning_strategies>: (Required, 1) Describes specific learning strategies by skill area.
        + <listening>, <reading>, <writing>, <speaking>, <vocabulary>, <grammar>: (Required, 1 of each) Represents each learning skill area.
          + <item>: (Required, 1 or more) Describes each specific strategy for that skill.
      + <recommended_resources>: (Required, 1) A list of recommended learning materials.
        + <textbooks>, <online_resources>, <apps>, <practice_tests>: (Required, 1 of each) Categorizes the types of resources.
          + <item>: (Required, 1 or more) Describes each individual resource.
      + <timeline>: (Required, 1) Presents milestones and goals over a period.
        + <phase name="[Period]">: (Required, multiple allowed) Divides the study plan into phases, like 'Months 1-2'. Must include the name attribute.
          + <objective>: (Required, 1) The objective for that phase.
          + <plan>: (Required, 1) The detailed plan for that phase.
            + <item>: (Required, 1 or more) Describes each individual plan item.
      + <tips>: (Required, 1) Contains additional advice for successful learning.
        + <item>: (Required, 1 or more) Describes each individual tip.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <study_plan>
      <title>...</title>
      <overview>...</overview>
      <weekly_plan>
        <day name="..." time="...">
          <focus>...</focus>
          <activity>
            <item>...</item>
            ...
          </activity>
        </day>
        ...
      </weekly_plan>
      <learning_strategies>
        <listening>
          <item>...</item>
          ...
        </listening>
        <reading>
          <item>...</item>
          ...
        </reading>
        <writing>
          <item>...</item>
          ...
        </writing>
        <speaking>
          <item>...</item>
          ...
        </speaking>
        <vocabulary>
          <item>...</item>
          ...
        </vocabulary>
        <grammar>
          <item>...</item>
          ...
        </grammar>
      </learning_strategies>
      <recommended_resources>
        <textbooks>
          <item>...</item>
          ...
        </textbooks>
        <online_resources>
          <item>...</item>
          ...
        </online_resources>
        <apps>
          <item>...</item>
          ...
        </apps>
        <practice_tests>
          <item>...</item>
          ...
        </practice_tests>
      </recommended_resources>
      <timeline>
        <phase name="...">
          <objective>...</objective>
          <plan>
            <item>...</item>
            ...
          </plan>
        </phase>
        ...
      </timeline>
      <tips>
        <item>...</item>
        ...
      </tips>
    </study_plan>
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.
    Ensure the XML is well-formed, with no extra text or comments. Validate against the provided schema.


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
vocab_expansion_task:
  description: |-
    # User Input
    - Korean word: {user_word}
    - User's language: {language}

    # Guidelines
    1. Analyze the input word, correcting typos if necessary.
    2. Classify the word's level (Beginner, Intermediate, Advanced) per TOPIK.
    3. Detect user's language (default: Korean; otherwise, use context).
    4. Output a detailed vocabulary analysis as a single, well-formed XML document, strictly following the schema and rules below.
    5. If the input is invalid, out of scope, or inappropriate, return only the specified plain text error message.

    # [XML STRUCTURE DEFINITION]

    - <vocabulary_expansion>: (Root element) Contains the entire analysis.
      + <request original_input="[user's raw input]">: (Required, 1) Information about the initial user request.
        + <corrected_input>: (Optional, 1) The word after typo correction. Only include if a correction was made.
      + <word_info level="[Beginner/Intermediate/Advanced]" type="[품사]">: (Required, 1) Contains all information about the word. level and type attributes are mandatory.
        + <word>: (Required, 1) The standard form of the word.
        + <pronunciation>: (Optional, 1) Phonetic pronunciation.
        + <definition lang="ko">: (Required, 1) The primary definition in Korean.
        + <definition lang="[user_lang]">: (Optional, 1) The definition translated into the user's native language. (language: {language})
        + <synonyms>: (Optional, 1) A list of synonyms.
          + <item>: (Required if <synonyms> exists, multiple allowed) A single synonym.
        + <antonyms>: (Optional, 1) A list of antonyms.
          + <item>: (Required if <antonyms> exists, multiple allowed) A single antonym.
        + <examples>: (Required, 1) A list of example sentences.
          + <example>: (Required, multiple allowed) A single example set.
            + <ko>: (Required, 1) The example sentence in Korean.
            + <translation lang="[user_lang]">: (Optional, 1) The translation of the example sentence. (language: {language})
        + <etymology>: (Optional, 1) Etymology or Hanja origin of the word.
        + <related_expressions>: (Optional, 1) A list of related idioms or expressions.
          + <item>: (Required if tag exists, multiple allowed) A single related expression.

    # [ERROR MESSAGES]
    1. Invalid Input: 입력하신 단어나 표현을 이해하지 못했습니다. 다시 한 번 확인해 주세요.
    2. Out of Scope: 죄송합니다. 저는 한국어 어휘 학습을 돕는 AI입니다. 일반적인 질문은 기본 챗봇을 이용해 주세요.
    3. Inappropriate Content: 부적절한 내용이 감지되어 응답할 수 없습니다.

  expected_output: |-
    You MUST output only a single, well-formed XML document, strictly following this structure:
    <?xml version="1.0" encoding="UTF-8" ?>
    <vocabulary_expansion>
      <request original_input="...">
        <corrected_input>...</corrected_input>
      </request>
      <word_info level="..." type="...">
        <word>...</word>
        <pronunciation>...</pronunciation>
        <definition lang="ko">...</definition>
        <definition lang="en">...</definition>
        <synonyms>
          <item>...</item>
          ...
        </synonyms>
        <antonyms>
          <item>...</item>
          ...
        </antonyms>
        <examples>
          <example>
            <ko>...</ko>
            <translation lang="en">...</translation>
          </example>
          ...
        </examples>
        <etymology>...</etymology>
        <related_expressions>
          <item>...</item>
          ...
        </related_expressions>
      </word_info>
    </vocabulary_expansion>
    All content must be inside tags, and all tags must be correctly nested and closed. Do not add any explanations or text outside the XML.
    If the input is invalid, out of scope, or inappropriate, return only the specified plain text error message.
    Ensure the XML is well-formed, with no extra text or comments. Validate against the provided schema.